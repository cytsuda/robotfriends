{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","components/Scroll.js","components/CounterButton.js","components/Header.js","redux/constants.js","containers/App.js","redux/action.js","reportWebVitals.js","redux/reducers.js","index.js"],"names":["Card","id","name","email","username","className","src","alt","EmptyComp","console","log","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Loading","cx","cy","r","CardList","robots","isPending","length","map","robot","SearchBox","searchField","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","ConterButton","updateCount","count","nextProps","nextState","color","onClick","Header","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","onSearchChange","filterRobots","filter","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","rootReducer","combineReducers","action","Object","assign","store","createLogger","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3f4365f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ id, name, email, username }) => {\r\n  return (\r\n    <div\r\n      className=\"bg-gray-700\r\n      border\r\n      border-black\r\n      border-opacity-50\r\n      rounded-lg\r\n      transform hover:scale-105\r\n      cursor-pointer\r\n      shadow-lg\r\n      overflow-hidden\r\n      transition duration-150 ease-in-out\"\r\n    >\r\n      <div className=\"relative\">\r\n        <img src={`https://robohash.org/${id}?200x200`} alt={name} />\r\n        <p className=\"bg-gray-800 absolute inset-x-0 bottom-0 opacity-80 italic text-center\">\r\n          {username}\r\n        </p>\r\n      </div>\r\n      <div className=\"pt-5 pb-6 px-6 bg-gray-600\">\r\n        <h2 className=\"text-2xl font-extrabold\">{name}</h2>\r\n        <p className=\"italic\">{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nconst EmptyComp = () => {\r\n  console.log(\"CardList\");\r\n  return (\r\n    <div className=\"w-full flex justify-center items-center\">\r\n      <div className=\"flex items-center gap-8 opacity-50\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-32 w-32\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg>\r\n        <p className=\"text-7xl\">No robot found!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"flex justify-center gap-4 opacity-50\">\r\n      <svg\r\n        className=\"animate-spin -ml-1 mr-3 h-12 w-12 \"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <circle\r\n          className=\"opacity-25\"\r\n          cx=\"12\"\r\n          cy=\"12\"\r\n          r=\"10\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"4\"\r\n        ></circle>\r\n        <path\r\n          className=\"opacity-75\"\r\n          fill=\"currentColor\"\r\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n        ></path>\r\n      </svg>\r\n      <p className=\"text-5xl\">Loading</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CardList = ({ robots, isPending }) => {\r\n  if (isPending) {\r\n    return <Loading />;\r\n  } else if (!robots.length) {\r\n    return <EmptyComp />;\r\n  } else\r\n    return (\r\n      <div className=\"grid grid-cols-5 gap-10 p-4\">\r\n        {robots.map((robot) => (\r\n          <Card\r\n            key={robot.id}\r\n            id={robot.id}\r\n            name={robot.name}\r\n            email={robot.email}\r\n            username={robot.username}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  console.log(\"SearchBox\");\r\n  return (\r\n    <div className=\"bg-gray-800 rounded-full relative w-3/12 border border-gray-100 border-opacity-25\">\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search robots\"\r\n        className=\"\r\n          w-full\r\n          bg-transparent\r\n          px-5 pt-2 pb-3\r\n          text-xl\r\n          focus:outline-none\r\n          focus:ring\r\n          focus:border-blue-300\r\n          rounded-full\r\n        \"\r\n        onChange={searchChange}\r\n      />\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-6 w-6 absolute top-0 right-4 transform translate-y-2/4 opacity-50\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth={2}\r\n          d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>That is not good</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className=\"flex-auto overflow-y-auto h-full\">{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ConterButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return true;\r\n  }\r\n  updateCount = () => {\r\n    this.setState((state) => ({ count: state.count + 1 }));\r\n  };\r\n\r\n  render() {\r\n    console.log(\"ConterButton\");\r\n    return (\r\n      <button\r\n        className=\"py-2 px-6 rounded hover:bg-blue-500 transition font-bold bg-blue-400\"\r\n        color={this.props.color}\r\n        onClick={this.updateCount}\r\n      >\r\n        Count: {this.state.count}\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ConterButton;\r\n","import React, { Component } from \"react\";\r\nimport ConterButton from \"./CounterButton\";\r\n\r\nclass Header extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return false;\r\n  }\r\n  render() {\r\n    console.log(\"Header\");\r\n    return (\r\n      <div className=\"flex flex-col justify-center items-center mb-4\">\r\n        <h1 className=\"mb-4 text-center text-5xl font-title\">Robot Friends</h1>\r\n        <ConterButton color=\"red\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\n\r\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\r\nexport const REQUEST_ROBOTS_SUCESS = \"REQUEST_ROBOTS_SUCESS\";\r\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport Scroll from \"../components/Scroll\";\nimport Header from \"../components/Header\";\n// import { robots } from \"./data/robots\";\n\n// REDUX\nimport { setSearchField, requestRobots } from \"../redux/action\";\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots()),\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    console.log(\"Mounting robots\");\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filterRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return (\n      <div\n        className=\"\n        h-screen\n        overflow-hidden\n        text-white\n        bg-gray-900\n        bg-hero-pattern\"\n      >\n        <div\n          className=\"\n          container mx-auto pt-12 pb-8\n          flex flex-col\n          h-full\n        \"\n        >\n          <div className=\"flex flex-col justify-center items-center\">\n            <Header />\n            <SearchBox searchChange={onSearchChange} />\n          </div>\n          <div className=\"my-8 bg-gray-100 h-px opacity-10\" />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filterRobots} isPending={isPending} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from \"./constants\";\r\n\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text,\r\n});\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((response) => response.json())\r\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCESS, payload: data }))\r\n    .catch((error) =>\r\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\r\n    );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from \"./constants\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\",\r\n};\r\n\r\nconst initialStateRobots = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD: {\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, { isPending: true });\r\n    case REQUEST_ROBOTS_SUCESS:\r\n      return Object.assign({}, state, {\r\n        robots: action.payload,\r\n        isPending: false,\r\n      });\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isPending: false,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { searchRobots, requestRobots } from \"./redux/reducers\";\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}